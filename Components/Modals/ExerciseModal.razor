@using FitnessPT.Dtos

<div class="modal-overlay" @onclick="OnClose">
    <div class="modal-content" @onclick:stopPropagation>
        <div class="modal-header">
            <h2>@(IsEdit ? "✏️ 운동 수정" : "➕ 새 운동 추가")</h2>
            <button class="btn-close" @onclick="OnClose">✖</button>
        </div>

        <div class="modal-body">
            <div class="form-group">
                <label>운동 이름 <span class="required">*</span></label>
                <input type="text" 
                       class="form-control" 
                       @bind="Exercise.Name"
                       placeholder="예: 푸시업" />
            </div>

            <div class="form-group">
                <label>설명</label>
                <textarea class="form-control" 
                          @bind="Exercise.Description"
                          rows="3"
                          placeholder="운동에 대한 설명을 입력하세요"></textarea>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label>레벨 <span class="required">*</span></label>
                    <select class="form-select" @bind="Exercise.Level">
                        <option value="">선택하세요</option>
                        <option value="beginner">초급</option>
                        <option value="intermediate">중급</option>
                        <option value="advanced">고급</option>
                    </select>
                </div>

                <div class="form-group">
                    <label>카테고리 <span class="required">*</span></label>
                    <select class="form-select" @bind="Exercise.Category">
                        <option value="">선택하세요</option>
                        <option value="upper_body">상체</option>
                        <option value="lower_body">하체</option>
                        <option value="core">코어</option>
                        <option value="cardio">유산소</option>
                        <option value="full_body">전신</option>
                    </select>
                </div>
            </div>

            <div class="form-group">
                <label>세부 부위</label>
                <input type="text" 
                       class="form-control" 
                       @bind="Exercise.CategoryDetail"
                       placeholder="예: 가슴, 허벅지, 복부" />
            </div>

            <div class="form-group">
                <label>이미지 URL</label>
                <input type="url" 
                       class="form-control" 
                       @bind="Exercise.ImageUrl"
                       placeholder="https://example.com/image.jpg" />
                @if (!string.IsNullOrEmpty(Exercise.ImageUrl))
                {
                    <div class="image-preview">
                        <img src="@Exercise.ImageUrl" alt="미리보기" />
                    </div>
                }
            </div>

            <div class="form-group">
                <label>영상 URL</label>
                <input type="url" 
                       class="form-control" 
                       @bind="Exercise.VideoUrl"
                       placeholder="https://youtube.com/..." />
            </div>
        </div>

        <div class="modal-footer">
            <button class="btn btn-secondary" @onclick="OnClose">
                취소
            </button>
            <button class="btn btn-primary" 
                    @onclick="HandleSave"
                    disabled="@(!IsValid())">
                @(IsEdit ? "수정" : "추가")
            </button>
        </div>
    </div>
</div>

@code {
    [Parameter, EditorRequired]
    public ExerciseDto Exercise { get; set; } = new();

    [Parameter]
    public bool IsEdit { get; set; }

    [Parameter]
    public EventCallback<ExerciseDto> OnSave { get; set; }

    [Parameter]
    public EventCallback OnClose { get; set; }

    private bool IsValid()
    {
        return !string.IsNullOrWhiteSpace(Exercise.Name) &&
               !string.IsNullOrWhiteSpace(Exercise.Level) &&
               !string.IsNullOrWhiteSpace(Exercise.Category);
    }

    private async Task HandleSave()
    {
        if (IsValid())
        {
            await OnSave.InvokeAsync(Exercise);
        }
    }
}