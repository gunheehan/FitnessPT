@using FitnessPT.Dtos
@using FitnessPT.Components.Shared

@rendermode InteractiveServer

<div class="modal-overlay" @onclick="OnClose">
    <div class="modal-content" @onclick:stopPropagation>
        <div class="modal-header">
            <h2>@(IsEdit ? "✏️ 루틴 수정" : "➕ 새 루틴 추가")</h2>
            <button class="btn-close" @onclick="OnClose">✖</button>
        </div>
        
        <div class="modal-body">
            <div class="form-group">
                <label>루틴 이름 <span class="required">*</span></label>
                <input type="text"
                       class="form-control"
                       @bind="Routine.Name"
                       placeholder="예: 상체 박살 루틴"/>
            </div>

            <div class="form-group">
                <label>설명</label>
                <textarea class="form-control"
                          @bind="Routine.Description"
                          rows="3"
                          placeholder="운동에 대한 설명을 입력하세요"></textarea>
            </div>
            <div class="form-row">
                <CategoryFillter
                    @bind-SelectedLevel="selectedLevel"
                    @bind-SelectedCategory="selectedCategory"
                    OnFiltersChanged="ApplyFilters" />
            </div>
            
            <div class="form-row">
                <button class="modal-button">추가</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter, EditorRequired]
    public RoutineDto Routine { get; set; } = new();
    
    [Parameter]
    public bool IsEdit { get; set; }
    
    [Parameter]
    public EventCallback<RoutineDto> OnSave { get; set; }
    
    [Parameter]
    public EventCallback OnClose { get; set; }
    
    private string selectedLevel = "";
    private string selectedCategory = "";

    private List<string> exerciseList;

    protected override async Task OnInitializedAsync()
    {
        exerciseList = new List<string>();
    }

    private async Task ApplyFilters()
    {
        Console.WriteLine($"필터 적용 - 레벨: {selectedLevel}, 카테고리: {selectedCategory}");
    }
}